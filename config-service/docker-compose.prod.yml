version: '3.8'

services:
  api:
    image: config-service:latest
    build: .
    container_name: config-service-api
    restart: unless-stopped
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/config_service
      - API_KEY=${CONFIG_SERVICE_API_KEY:-production-api-key}
      - DEBUG=false
      - ENVIRONMENT=production
      - HOST=0.0.0.0
      - PORT=8000
    depends_on:
      - db
    networks:
      - traefik-public
      - backend
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.config-service.rule=Host(`config.sprintia.com.br`)"
      - "traefik.http.routers.config-service.entrypoints=websecure"
      - "traefik.http.routers.config-service.tls.certresolver=myresolver"
      - "traefik.http.services.config-service.loadbalancer.server.port=8000"

  db:
    image: postgres:13
    container_name: config-service-db
    restart: unless-stopped
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=config_service
    volumes:
      - config_service_db:/var/lib/postgresql/data
    networks:
      - backend
    deploy:
      placement:
        constraints:
          - node.role == manager

networks:
  traefik-public:
    external: true
  backend:
    driver: overlay

volumes:
  config_service_db:
