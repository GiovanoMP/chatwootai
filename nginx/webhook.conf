server {
    listen 80;
    server_name webhook.server.efetivia.com.br;

    # Redirecionar todo o tráfego HTTP para HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl;
    server_name webhook.server.efetivia.com.br;

    # Configurações de SSL que serão preenchidas pelo Certbot
    ssl_certificate /etc/letsencrypt/live/webhook.server.efetivia.com.br/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/webhook.server.efetivia.com.br/privkey.pem;
    
    # Configurações recomendadas de segurança
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;
    
    # Cabeçalhos de segurança
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";

    # Configuração do proxy reverso para o servidor webhook
    location / {
        # Restringir acesso apenas aos IPs do Chatwoot e do sistema Odoo
        # Substitua estes IPs pelos IPs reais do Chatwoot e do Odoo
        # Formato: allow IP_ADDRESS;
        allow 127.0.0.1;        # Localhost (para testes)
        allow IP_DO_CHATWOOT;   # Substitua pelo IP real do Chatwoot
        allow IP_DO_ODOO;       # Substitua pelo IP real do Odoo
        deny all;               # Negar todos os outros IPs
        
        proxy_pass http://localhost:8001;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Registrar tentativas de acesso para monitoramento
        access_log /var/log/nginx/webhook_access.log;
        error_log /var/log/nginx/webhook_error.log;
    }
}
