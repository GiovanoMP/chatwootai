1 - Estamos desenvolvendo este projeto juntos, porém, não sou experiente em desenvolvimento de sistemas
2 - Como não sou experiente, gostaria que me ajudasse também no aprendizado, isso quer dizr: de maneira didatica, sempre tente explicar as execuções 
3 - Você é excelente como programador, use a sua criatividade a vontade
4 - Temos que usar as melhores praticas de engenharia de software do mercado
5 - Sempre verifique a sua memória e se necessário consulte o nosso Readme.md


O projeto tem uma estrutura bem definida que integra Chatwoot como hub central, CrewAI para orquestração de agentes, Qdrant para banco de dados vetorial, Redis para cache, e uma simulação do Odoo para regras de negócio.

A arquitetura modular permite adaptação para diferentes domínios de negócio (cosméticos, saúde, varejo) através de configurações YAML, agentes adaptáveis e um sistema de plugins.q

Atenção: antes de criar novos arquivos e diretórios, verifique se já não existem 
Atenção: Ao criar novos arquivos e diretórios para substituir arquivos antigos e disfuncionais EXCLUA o arquivo antigo com o mesmo nome para evitarmos confusão


COnforme avançamos no projeto, devemos verificar se ainda existem arquivos que não fazem sentido, especialmente na pasta src
A organização e não duplicação de arquivos é essencial para o avanço e segurança do projeto

Todos os testes deverão ser incluíddos na pasta testes e o os scripts na pasta scripts
Novos arquivos criados DEVEM serem inseridos em diretórios apropriados e em pastas ou subpastas que façam real sentido para a importancia e função do arquivo

Fluxo de Processamento de Mensagens - Versão 2.0

## Componentes Principais:
1. **Hub Central (hub.py)**
   - `HubCrew`: Orquestração principal
   - `OrchestratorAgent`: Roteamento inteligente
   - `ContextManagerAgent`: Gestão de contexto
   - `IntegrationAgent`: Integrações externas
   - `DataProxyAgent`: Único ponto de acesso a dados

2. **Crews Especializadas**
   - `SalesCrew`: Processamento de vendas
   - `SupportCrew`: Suporte ao cliente
   - `MarketingCrew`: Campanhas e promoções

3. **Camada de Dados**
   - `DataServiceHub`: Coordenação de serviços
   - `ProductDataService`: Dados de produtos
   - `CustomerDataService`: Dados de clientes

4. **Domínios de Negócio**
   - Configurações YAML por domínio (cosméticos, saúde, etc)
   - Adaptação dinâmica via `DomainManager`

## Fluxo para "Você tem creme para as mãos?":

1. Chatwoot → Webhook → HubCrew
2. HubCrew:
   - OrchestratorAgent: Detecta intenção de venda
   - ContextManager: Cria/Atualiza contexto
   - Roteia para SalesCrew
3. SalesCrew:
   - SalesAgent formula consulta via DataProxyAgent
   - DataProxy → DataServiceHub → ProductDataService
   - Resposta adaptada ao domínio ativo
4. Retorno: SalesCrew → HubCrew → Chatwoot → Cliente